XML を直接書き出すときに、if とか for とかを使いながらも、XML と同じインデントでソースコードを書きたい

どんな仕組みなのか

C# の using で ElementWriter を作ると、コンストラクターで開くタグを書いて、Disposer で閉じるタグを書きます。
ElementWriter を継承して XML の要素名でクラスを作るといいでしょう。
if はラムダ式で作る作らないを指示します。これだけだと子要素を書き出してしまうので、ツリーを構築します。ツリーが戻ってきたところで、ラムダ式を呼び出し、真が返されたら書き出しを実行します。
for はカウンターを使います。カウンターは有効判定のラムダ式に渡されるので、必要なカウントを超えたら false を返すようにします。そのあと、属性作成のラムダ式にも渡されるので、属性をセットします。子要素も if と同じようにカウンターを使う要素が書き出されるたびに書き出され、その時にカウンターを「自分で」参照することで、書き出す内容をカウンターの値に合わせて決められます。

疑問に思うかもしれないこと-１-コンテキストを毎回渡す

なぜコンテキストのメソッドにしないのかというと、XML の要素名のクラスを作った時に、それが一番前に来るようにするためです。

疑問に思うかもしれないこと-２-属性の辞書を直接渡さない

XML の要素名のクラスを作った時に、XML の要素名と一緒に書かせたい。C# には辞書を初期化するリテラルはありますが、辞書になるリテラルはないからです。つまり、new Dictionary<String, String> が長すぎるから。

